-- Table: dimensional.dimensaocliente

-- DROP TABLE dimensional.dimensaocliente;

CREATE TABLE dimensional.dimensaocliente
(
    chavecliente integer NOT NULL DEFAULT nextval('dimensional.chavecliente'::regclass),
    idcliente integer,
    cliente character varying(50) COLLATE pg_catalog."default",
    sexo character(1) COLLATE pg_catalog."default",
    status character varying(50) COLLATE pg_catalog."default",
    chavefaixa integer,
    chavelocalidade integer,
    datainiciovalidade date NOT NULL,
    datafimvalidade date,
    CONSTRAINT newdimensaocliente_pkey PRIMARY KEY (chavecliente),
    CONSTRAINT newdimensaocliente_chavefaixa_fkey FOREIGN KEY (chavefaixa)
        REFERENCES dimensional.dimensaofaixaetaria (chavefaixa) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT newdimensaocliente_chavelocalidade_fkey FOREIGN KEY (chavelocalidade)
        REFERENCES dimensional.dimensaolocalidade (chavelocalidade) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.dimensaocliente
    OWNER to trn_usr;
	
	
	

	
	
-- Table: dimensional.dimensaofaixaetaria

-- DROP TABLE dimensional.dimensaofaixaetaria;

CREATE TABLE dimensional.dimensaofaixaetaria
(
    chavefaixa integer NOT NULL DEFAULT nextval('dimensional.chavefaixa'::regclass),
    chaveinicio integer,
    chavefim integer,
    defaixa character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT dimensaofaixaetaria_pkey PRIMARY KEY (chavefaixa)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.dimensaofaixaetaria
    OWNER to trn_usr;

	
	
-- Table: dimensional.dimensaolocalidade

-- DROP TABLE dimensional.dimensaolocalidade;

CREATE TABLE dimensional.dimensaolocalidade
(
    chavelocalidade integer NOT NULL DEFAULT nextval('dimensional.chavelocalidade'::regclass),
    sgestado character varying(2) COLLATE pg_catalog."default",
    noestado character varying(20) COLLATE pg_catalog."default",
    noregiao character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT dimensaolocalidade_pkey PRIMARY KEY (chavelocalidade)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.dimensaolocalidade
    OWNER to trn_usr;
	
	
	
	
-- Table: dimensional.dimensaoproduto

-- DROP TABLE dimensional.dimensaoproduto;

CREATE TABLE dimensional.dimensaoproduto
(
    chaveproduto integer NOT NULL DEFAULT nextval('dimensional.chaveproduto'::regclass),
    idproduto integer,
    produto character varying(100) COLLATE pg_catalog."default",
    categoria character varying(100) COLLATE pg_catalog."default",
    datainiciovalidade date NOT NULL,
    datafimvalidade date,
    CONSTRAINT newdimensaoproduto_pkey PRIMARY KEY (chaveproduto)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.dimensaoproduto
    OWNER to trn_usr;
	
	
-- Table: dimensional.dimensaotempo

-- DROP TABLE dimensional.dimensaotempo;

CREATE TABLE dimensional.dimensaotempo
(
    chavetempo integer NOT NULL DEFAULT nextval('dimensional.chavetempo'::regclass),
    data date,
    dia integer,
    mes integer,
    ano integer,
    diasemana integer,
    trimestre integer,
    CONSTRAINT dimensaotempo_pkey PRIMARY KEY (chavetempo)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.dimensaotempo
    OWNER to trn_usr;
	
	
	
-- Table: dimensional.dimensaovendedor

-- DROP TABLE dimensional.dimensaovendedor;

CREATE TABLE dimensional.dimensaovendedor
(
    chavevendedor integer NOT NULL DEFAULT nextval('dimensional.chavevendedor'::regclass),
    idvendedor integer,
    nome character varying(50) COLLATE pg_catalog."default",
    datainiciovalidade date NOT NULL,
    datafimvalidade date,
    CONSTRAINT dimensaovendedor_pkey PRIMARY KEY (chavevendedor)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.dimensaovendedor
    OWNER to trn_usr;
	
	
	
-- Table: dimensional.fatovendas

-- DROP TABLE dimensional.fatovendas;

CREATE TABLE dimensional.fatovendas
(
    chavevendas integer NOT NULL DEFAULT nextval('dimensional.chavevendas'::regclass),
    chavevendedor integer,
    chavecliente integer,
    chavelocalidade integer,
    chavefaixa integer,
    chaveproduto integer,
    chavetempo integer,
    quantidade integer,
    valorunitario numeric(10,2),
    valortotal numeric(10,2),
    valordesconto numeric(10,2),
    valorliquido numeric(10,2),
    CONSTRAINT fatovendas_pkey1 PRIMARY KEY (chavevendas),
    CONSTRAINT fatovendas_chavecliente_fkey1 FOREIGN KEY (chavecliente)
        REFERENCES dimensional.dimensaocliente (chavecliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chavefaixa_fkey FOREIGN KEY (chavefaixa)
        REFERENCES dimensional.dimensaofaixaetaria (chavefaixa) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chavelocalidade_fkey FOREIGN KEY (chavelocalidade)
        REFERENCES dimensional.dimensaolocalidade (chavelocalidade) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chaveproduto_fkey1 FOREIGN KEY (chaveproduto)
        REFERENCES dimensional.dimensaoproduto (chaveproduto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chavetempo_fkey1 FOREIGN KEY (chavetempo)
        REFERENCES dimensional.dimensaotempo (chavetempo) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chavevendedor_fkey1 FOREIGN KEY (chavevendedor)
        REFERENCES dimensional.dimensaovendedor (chavevendedor) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.fatovendas
    OWNER to trn_usr;
	
-- Table: dimensional.fatovendasmes

-- DROP TABLE dimensional.fatovendasmes;

CREATE TABLE dimensional.fatovendasmes
(
    chavevendas integer NOT NULL DEFAULT nextval('dimensional.chavevendas'::regclass),
    chavevendedor integer,
    chavelocalidade integer,
    chavefaixa integer,
    chaveproduto integer,
    chavetempo integer,
    quantidade integer,
    valortotal numeric(10,2),
    valordesconto numeric(10,2),
    valorliquido numeric(10,2),
    CONSTRAINT fatovendasmes_pkey PRIMARY KEY (chavevendas),
    CONSTRAINT fatovendasmes_chavefaixa_fkey FOREIGN KEY (chavefaixa)
        REFERENCES dimensional.dimensaofaixaetaria (chavefaixa) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendasmes_chavelocalidade_fkey FOREIGN KEY (chavelocalidade)
        REFERENCES dimensional.dimensaolocalidade (chavelocalidade) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendasmes_chaveproduto_fkey FOREIGN KEY (chaveproduto)
        REFERENCES dimensional.dimensaoproduto (chaveproduto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendasmes_chavetempo_fkey FOREIGN KEY (chavetempo)
        REFERENCES dimensional.dimensaotempo (chavetempo) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendasmes_chavevendedor_fkey FOREIGN KEY (chavevendedor)
        REFERENCES dimensional.dimensaovendedor (chavevendedor) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.fatovendasmes
    OWNER to trn_usr;
	
	
	
	
-- Table: dimensional.fatovendastrimestre

-- DROP TABLE dimensional.fatovendastrimestre;

CREATE TABLE dimensional.fatovendastrimestre
(
    chavevendas integer NOT NULL DEFAULT nextval('dimensional.chavevendas'::regclass),
    chavevendedor integer,
    chavelocalidade integer,
    chavefaixa integer,
    chaveproduto integer,
    chavetempo integer,
    quantidade integer,
    valortotal numeric(10,2),
    valordesconto numeric(10,2),
    valorliquido numeric(10,2),
    CONSTRAINT fatovendastrimestre_pkey PRIMARY KEY (chavevendas),
    CONSTRAINT fatovendastrimestre_chavefaixa_fkey FOREIGN KEY (chavefaixa)
        REFERENCES dimensional.dimensaofaixaetaria (chavefaixa) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendastrimestre_chavelocalidade_fkey FOREIGN KEY (chavelocalidade)
        REFERENCES dimensional.dimensaolocalidade (chavelocalidade) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendastrimestre_chaveproduto_fkey FOREIGN KEY (chaveproduto)
        REFERENCES dimensional.dimensaoproduto (chaveproduto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendastrimestre_chavetempo_fkey FOREIGN KEY (chavetempo)
        REFERENCES dimensional.dimensaotempo (chavetempo) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendastrimestre_chavevendedor_fkey FOREIGN KEY (chavevendedor)
        REFERENCES dimensional.dimensaovendedor (chavevendedor) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.fatovendastrimestre
    OWNER to trn_usr;

-- Table: dimensional.odsvendas

-- DROP TABLE dimensional.odsvendas;

CREATE TABLE dimensional.odsvendas
(
    chavevendas integer NOT NULL DEFAULT nextval('dimensional.chavevendas'::regclass),
    chavevendedor integer,
    chavecliente integer,
    chaveproduto integer,
    chavetempo integer,
    quantidade integer,
    valorunitario numeric(10,2),
    valortotal numeric(10,2),
    valordesconto numeric(10,2),
    CONSTRAINT fatovendas_pkey PRIMARY KEY (chavevendas),
    CONSTRAINT fatovendas_chavecliente_fkey FOREIGN KEY (chavecliente)
        REFERENCES dimensional.dimensaocliente (chavecliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chaveproduto_fkey FOREIGN KEY (chaveproduto)
        REFERENCES dimensional.dimensaoproduto (chaveproduto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chavetempo_fkey FOREIGN KEY (chavetempo)
        REFERENCES dimensional.dimensaotempo (chavetempo) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fatovendas_chavevendedor_fkey FOREIGN KEY (chavevendedor)
        REFERENCES dimensional.dimensaovendedor (chavevendedor) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE dimensional.odsvendas
    OWNER to trn_usr;